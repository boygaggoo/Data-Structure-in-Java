int turn(int r, int c, int h, int w){
    int equal = 1;
    if(r > h-1-r){
      r = h-1-r, equal = 0;
    }
    if(c >= w-1-c) c = w-1-c, equal = 0; 
    r -= equal; // When the row and col doesn't change, this will reduce row by 1
    if(r==c) return 1;
    return 0;
}

int directions[4][2] = {{0,1},{1,0},{0,-1},{-1,0}};
void matrix(int a[4][4], int height, int width, char* OutputBuffer = '\0'){
    int idX=0, i=0;
    int currentRow=0, currentCol=0;
    for(i=0; i<height*width; i++){
        printf("%d ",a[currentRow][currentCol]);
        if(turn(currentRow, currentCol, height, width)){
            idX = (idX+1)%4;
        }
        currentRow += directions[idX][0];
        currentCol += directions[idX][1];
    }
    printf("\n");
}